0.1.2 [Galactic Gateway]
1. Split one big file two_d.rs into small sub-files (easy improve, debug, etc.)
2. Make first game
    - Randomly generated dungeon
    - Point Light
    - Randomly spawning enemies
    - Enemies follow player
    - Infinite levels
    - Enemies can attack player
    - Simple health bar
3. Fixed bug with AudioPlayer and add example: before there was a problem to play a file
4. Update a little bit README file
5. Separated gui, located in gui folder
6. Docking - drag&drop components
7. Logging for GUI: Now in logs all message are visible and on Problems tab item only errors. Successful message are highlited green and errors - red
8. GUI modify transaltion to other languages: Parsing from JSON translation to other languages since it is currently hardcoded `translate` function
9. GUI: Modify execute_code and execute_code_web function was modified for Linux and Windows
10. GUI: Improve Texture component possibility to add tags for animation
11. GUI: Add possibility Input Handler
12. GUI: Improve DisplayComponentTree
13. GUI: Integrate VSCode
14. Minor update: Add logging for some parts of executing
15. Minor update: Fix function
16. Minor update: modify execute_code, representing everything in logs
17. GUI: 
    1. Modified launch project now when user clicks on generate template appears dialogue box with asking to save a scene
        "yes" then save where user want and then VSCode automatically open .rs file with template. 
    2. Modified execute_code now it executes project which was recently saved

0.1.1 [Quasar Quest]
1. Animation class was improved now we can set a row from one png file(instea dof cutting into some separate pngs and playing with them around)
2. PointLight was improved completely can be used very easily(before there were some problems with PointLight)
3. AmbientLightFIlter was added to change the color gradient for the game(new feature)
4. Examples were improved as well as more examples were added
5. Spot Light(new feature)
6. Rounded /not rounded buttons(there was such a decision to make either rounded or not)
7. Simple profiler(new feature)
8. GEvent for keyboards is used now (on top of sdl2::event::Event)
9. Dialogue System improvement (before there was only possibility to add text but it was impoossible to render and draw)

0.1.0 [Orbit Overture]
1. Graphics UI 
    - Buttons
    - Slider 
    - TextBox
    - CheckBox 
    - UI Layer 
    - Fonts 
    - Particle System 
    - Parallax Background
2. Audio
3. Input Handler
4. Math types
5. Physics 
    - RigidBody 
    - Collision
6. Animation
7. AI System 
    - Behaviour Tree
8. Timer
9. Dialogue System
10. Ligting 
    - Point Light